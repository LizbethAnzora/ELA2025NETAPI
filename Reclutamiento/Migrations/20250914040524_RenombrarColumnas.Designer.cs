// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reclutamiento.Context;

#nullable disable

namespace Reclutamiento.Migrations
{
    [DbContext(typeof(ReclutamientoContext))]
    [Migration("20250914040524_RenombrarColumnas")]
    partial class RenombrarColumnas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Reclutamiento.Entidades.RespuestaSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ContenidoMensaje")
                        .HasColumnType("longtext")
                        .HasColumnName("contenido_mensaje");

                    b.Property<int>("EnviadaPor")
                        .HasColumnType("int")
                        .HasColumnName("enviada_por");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_envio");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int")
                        .HasColumnName("id_solicitud");

                    b.HasKey("Id")
                        .HasName("pk_respuesta_solicitud");

                    b.ToTable("respuesta_solicitud", (string)null);
                });

            modelBuilder.Entity("Reclutamiento.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("longtext")
                        .HasColumnName("correo_electronico");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("HashContraseña")
                        .HasColumnType("longtext")
                        .HasColumnName("hash_contraseña");

                    b.Property<long?>("IdGithub")
                        .HasColumnType("bigint")
                        .HasColumnName("id_github");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("longtext")
                        .HasColumnName("nombre_completo");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("rol");

                    b.HasKey("Id")
                        .HasName("pk_usuario");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Reclutamiento.Entidades.Vacante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CreadaPor")
                        .HasColumnType("int")
                        .HasColumnName("creada_por");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<bool>("EstaActiva")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("esta_activa");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Requisitos")
                        .HasColumnType("longtext")
                        .HasColumnName("requisitos");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext")
                        .HasColumnName("titulo");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("longtext")
                        .HasColumnName("ubicacion");

                    b.HasKey("Id")
                        .HasName("pk_vacante");

                    b.ToTable("vacante", (string)null);
                });

            modelBuilder.Entity("Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CamposPersonalizados")
                        .HasColumnType("longtext")
                        .HasColumnName("campos_personalizados");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("longtext")
                        .HasColumnName("correo_electronico");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_envio");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext")
                        .HasColumnName("foto");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<int>("IdVacante")
                        .HasColumnType("int")
                        .HasColumnName("id_vacante");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("longtext")
                        .HasColumnName("nombre_completo");

                    b.Property<string>("NumeroTelefono")
                        .HasColumnType("longtext")
                        .HasColumnName("numero_telefono");

                    b.Property<bool>("RespuestaEnviada")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("respuesta_enviada");

                    b.HasKey("Id")
                        .HasName("pk_solicitud");

                    b.ToTable("solicitud", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
